fastlane_version "2.27.0"
default_platform :ios

platform :ios do
  lane :test do 
    UI.message "Testing complete"
  end

  lane :lint do 
    UI.message "lint complete"
  end

  lane :trigger_release do 
    UI.message "trigger_release complete"
    increment_build_number
    UI.message "Incrementing to build #{lane_context[SharedValues::BUILD_NUMBER]}"
    
#     commit_version_bump(message: "Bump build to #{lane_context[SharedValues::BUILD_NUMBER]}",
#                         xcodeproj: "ActionTesting.xcodeproj")
    ENV["BUILDY"] = lane_context[SharedValues::BUILD_NUMBER]
    sh('git commit -am "Bump build to $BUILDY"')

#     push_to_git_remote
    sh("echo PAT - $PAT - $ENV['PAT'] - ${ENV['PAT']}")
    sh("echo REPO - `git remote -v`")
    sh("git push https://$PAT@github.com/Richard-Gist/actions-testing.git")
  end

  lane :release do 
    # skip the current build assuming its Bump build to and get SHA of the last Bump build to
    starting_sha = `git log --oneline --no-decorate --skip=1 --grep "Bump build to" --max-count=1 --pretty=format:"%h"`
    # excluding commits with "Bump build to", gather all commits since starting sha and now
    changes = `git log #{starting_sha}..HEAD --oneline --no-decorate --grep "Bump build to" --invert-grep`
    if changes == ""
      UI.message "No changes found using current commit message"
      changes = `git log --oneline --no-decorate --max-count=1`
    end
    UI.header "Uploading TestFlight build"
    UI.important "Changelog will be:"
    UI.message changes
  end
end
